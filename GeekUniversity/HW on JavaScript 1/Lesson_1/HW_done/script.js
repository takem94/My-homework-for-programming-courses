"use strict";
/*************************************************************************************************
****************************************Просто конспект из видео.*********************************
*************************************************************************************************/

console.log('Hello, world!');

var name = 'Arthur';
var age = 27;
var isTrue = true;
var password = null;
var unknownPrice = undefined;

var someUser = {
    name: 'Arthur',
    age: 27,
    isTrue: true,
    unknownPrice: undefined,
    Mother: {
        name: 'Margo',
        age: 27*2,
        isTrue: true,
        unknownPrice: undefined,
    }
}

console.log(typeof name, name);
console.log(typeof age, age);
console.log(typeof isTrue, isTrue);
console.log(typeof unknownPrice, unknownPrice);
console.log(typeof someUser, someUser);
console.log(typeof password, password);
console.log(typeof someUser.Mother, someUser.Mother);

var dangerBtn = document.getElementsByClassName('danger-btn');
var counter = 0;

dangerBtn[0].onclick = function () {
    if(counter > 2){
        alert('BOOM!');
        dangerBtn[0].remove();
    } else {
        ++counter;
        alert('Dont do this! ('+counter+')');
    }
};


/*************************************************************************************************
****************************************Домашняя работа.******************************************
*************************************************************************************************/

/*
        1. Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в
    градусах по Фаренгейту. Подсказка: расчёт идёт по формуле: Tf = (9 / 5) * Tc + 32, где Tf –
    температура по Фаренгейту, Tc – температура по Цельсию
*/
(function(){
    var getFahrBtn = document.getElementById('get-fahr-btn');

    getFahrBtn.onclick = function () {
        var degreeC = document.getElementById('degree-с');
        var typeOfTemp = document.getElementById('type-of-temp');
        var selectedTemp = typeOfTemp.options[typeOfTemp.selectedIndex].value;
            // При решении я игнорировал тот факт, что возможно будет передано значение другого типа. 
            // Это конечно неправильно, но писать и обрабатывать все возможные случаи нету особого смысла. 
        if (selectedTemp == 'Fahr') {
            var valueC = degreeC.value;
            var tempС = (valueC-32) * (5/9);
            alert('Температура по цельсию: '+ Math.round(tempС));
        } else {
            var valueC = degreeC.value;
            var tempFahr = ((9 * valueC)/5) + 32;
            alert('Температура по Фаренгейту: '+ Math.round(tempFahr));
        }
    };
})();


/*
    2. Работа с переменными.
*/

/*
    Ответ:

        В Js есть интересные особенности с перемеными, в основном они связаны с разными стандартами. 
    В первую очередь, это то что раньше (в старых стандартах) можно  было объявлять переменную без var. 
    Позже были добавлены переменные let и const, первая решало проблему с глобальностью переменных и их
    областью видимости. Второй вид переменных сделал возможным объявлять константные переменные, без явной 
    возможности их изменять. 
*/

/*
    3. Объявить две переменные: admin и name. Записать в name строку "Василий"; Скопировать
    значение из name в admin. Вывести admin (должно вывести «Василий»).
*/

(function () {
    var admin, name = 'Василий';
    admin = name;    
    console.log(admin);
})();

/*
    4. * Чему будет равно JS-выражение 1000 + "108";
*/

(function (){
    var exempleOfConcatination = 1000 + "108";
    console.log(exempleOfConcatination);
})();

/*
    Ответ:

        Такое выражение будет сконкатинировано и приведено к  string. В данном случае операнд "плюс", это операция 
    конкатинации, которая приведет результат выражение к тому типу данных, которое интерпритатор посчитает наиболее 
    ожидаемым. Каждый тип данных имеет свой приоритет при конкатенации, строчный тип наиболее сильный. В таком языке
    как Php, это выражение могло автоматически быть преобразовано к целочисленному типу и посчитано. На самом деле,
    полагаться на интерпритатор не всегда стоит и лучше внимательно следить за преобразованием типов. В этом могут 
    помочь строго типизированные диалекты Js. 
*/


/*
    5. * Самостоятельно разобраться с атрибутами тега script (async и defer)
*/

/*
    Ответ:

        Данные атрибуты предназначены для того чтобы избежать проблем с задержкой загрузки страницы. Если в
    потоке html кода все исполняется построчно, то с применением этих атрибутов последоваетельность интерпритации 
    меняется. 
        Скрипт с атрибутом async будет выполнен сразу, после того как он будет готов и не будет удерживать
    на себе все ожидание. async можно применять во все браузерах, кроме IE 9 и ранее. 
        Атрибут defer позволяет отсрочить загрузку и выполнение скрипта до того момента, когда весь html
    будет загружен. Также, если будет подключено несколько файлов со скриптами и defer атрибутом, то они будут 
    выполнены последовательно в коде. При аsync в этом случае - будут подключены и выполнены скрипты по мере их 
    готовности. Эти атрибуты можно применять только к внешним скриптам с атрибутом src.
 */